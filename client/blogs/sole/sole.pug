- self.users = self.users || {};
- var user = self.users[self.user_id] || {};
- self.user_hid = user.hid;

- self.add_raw_data('settings',     self.settings)
- self.add_raw_data('user_id',      self.user_id)
- self.add_raw_data('user_hid',     self.user_hid)
- self.add_raw_data('current_tag',  self.current_tag)
- self.add_raw_data('subscription', self.subscription)
- self.add_raw_data('pagination',   self.pagination)

article#content.blogs-sole(
  data-keymap= {
    'home': 'blogs.sole:nav_to_start',
    'end':  'blogs.sole:nav_to_end'
  }
  data-last-entry-hid= self.last_entry_hid
)

  -
    var $query_top = {};
    var $query_bottom = { from: self.last_entry_hid };

    if (self.current_tag) {
      $query_top.tag    = self.current_tag;
      $query_bottom.tag = self.current_tag;
    }

    var navbar_args = {
      title_html: self.current_tag ?
                  self.partial('@blogs.sole.blocks.title_tag', { user: user, tag: self.current_tag }) :
                  self.partial('@blogs.sole.blocks.title_user', { user: user }),
      level_up: self.current_tag ?
                self.link_to('blogs.sole', { user_hid: user.hid }) :
                self.link_to('blogs.index'),
      toolbar: 'blogs.sole.blocks.page_actions.dropdown',
      progress: {
        link_top:    self.link_to('blogs.sole', {
          user_hid: user.hid,
          $query:   $query_top
        }),
        link_bottom: self.link_to('blogs.sole', {
          user_hid: user.hid,
          $query:   $query_bottom
        }),
        current:     self.pagination.chunk_offset,
        total:       self.pagination.total
      },
      search_tab: 'blog_entries',
      search_areas: [
        {
          title: self.t('search_sole'),
          method: 'search.blogs_sole',
          params: { hid: String(user.hid) }
        }
      ]
    };

  if self.current_tag
    != self.partial('@common.blocks.navbar.levelup_apps', navbar_args)
    != self.partial('@common.blocks.navbar.alt_levelup_title', navbar_args)
  else
    != self.partial('@common.blocks.navbar.levelup_progress_apps', navbar_args)
    != self.partial('@common.blocks.navbar.alt_levelup_progress_title', navbar_args)

  nav.breadcrumbs-container
    .layout__container.container-fluid
      != self.partial('@common.blocks.breadcrumbs')

  .layout__container.container-fluid
    != self.partial('@users.blocks.announces')

    if self.current_tag
      header.page-head.blogs-sole__head
        h1.blogs-index__title.page-head__title(itemprop='name')= self.t('title_tag', { tag: self.current_tag })

        != self.partial('@blogs.sole.blocks.page_actions')

    else
      header.page-head.blogs-sole__head(
        class = self.categories.length ? 'blogs-sole__head-m-tagged' : ''
      )
        a.blogs-sole__avatar(href=self.link_to('users.member', { user_hid: user.hid }))
          img.blogs-sole__userpic(alt=user.name)&attributes(self.avatar(user, 'md'))

        .blogs-sole__head-content
          h1.page-head__title
            a.blogs-sole__author-link(
              href=self.link_to('users.member', { user_hid: user.hid })
            )= user.name

          .blogs-sole__meta
            != self.partial('@blogs.blocks.tag_list', { tags: self.categories })

        != self.partial('@blogs.sole.blocks.page_actions')

    if self.entries && self.entries.length
      .blogs-sole__loading-prev.nojs-hide(
        class=(self.pagination.chunk_offset === 0 ? 'd-none' : '')
      )
        span.icon.icon-loading-placeholder

      .blogs-sole__entry-list._affix
        != self.partial('@blogs.blocks.entry_list_sole')

      .blogs-sole__loading-next.nojs-hide(
        class=(self.entries && self.entries.length > 0 && self.entries[self.entries.length - 1].hid === self.last_entry_hid ? 'd-none' : '')
      )
        span.icon.icon-loading-placeholder

      nav.pager.js-hide
        if self.head.prev
          a.btn.btn-secondary(href=self.head.prev)= self.t('prev_page')

        if self.head.next
          a.btn.btn-secondary(href=self.head.next)= self.t('next_page')
    else
      p!= self.current_tag ? self.t('tag_no_entries') : self.t('user_no_entries')
