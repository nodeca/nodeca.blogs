- self.add_raw_data('entry', self.entry)
- self.add_raw_data('settings', self.settings)

mixin render_comments(comments)
  - var i = 0;
  while i < comments.length
    -
      var comment  = comments[i++];
      var children = [];

      while (i < comments.length && comments[i].path.indexOf(comment._id) >= 0) {
        children.push(comments[i++]);
      }

    - var user = self.users[comment.user] || { hid: 0 };

    .blog-comment(id='comment' + comment.hid)
      .blog-comment__body
        .blog-comment__aside
          if user.hid
            a(href=self.link_to('users.member', { user_hid: user.hid }))
              img.blog-comment__avatar(alt=user.name)&attributes(self.avatar(user, 'sm'))
          else
            .blog-comment__avatar.av-anon

        footer.blog-comment__meta
          if user.hid
            .blog-comment__author
              a.blog-comment__author-link(
                href=self.link_to('users.member', { user_hid: user.hid })
              )= user.name

          .blog-comment__date
            != self.timetag(comment.ts, 'relative')

        .blog-comment__content
          .blog-comment__message.markup!= comment.html

          - var tail = self.partial('@blogs.entry.attachments', { post: comment, user: user });
          if tail
            .forum-post__tail.markup-tail
              !=tail

        footer.blog-comment__controls
          ul.blog-comment__controls-blk
            li.blog-comment__control-item.blog-comment__vote-up
              button.btn.blog-comment__action(
                title=self.t('vote_up')
              )
                span.icon.icon-vote-up

            li.blog-comment__control-item.blog-comment__vote-down
              button.btn.blog-comment__action(
                title=self.t('vote_down')
              )
                span.icon.icon-vote-down

            if self.settings.blogs_can_create
              li.blog-comment__control-item.blog-comment__reply
                //- for wide screen
                button.full.btn.blog-comment__action(
                  data-on-click='blogs.entry:reply'
                  data-comment-id=comment._id
                  data-comment-hid=comment.hid
                  data-comment-ts=comment.ts
                )
                  span.icon.icon-reply.icon-space-after= self.t('reply')
                //- for narrow screen
                button.short.btn.blog-comment__action(
                  data-on-click='blogs.entry:reply'
                  data-comment-id=comment._id
                  data-comment-hid=comment.hid
                  data-comment-ts=comment.ts
                  title=self.t('reply')
                )
                  span.icon.icon-reply

      .blog-comment__children
        +render_comments(children)


article#content.blogs-entry-page
  -
    var user = self.users[self.user_id] || {};
    var $query_top = {};
    var $query_bottom = { from: self.last_entry_hid };

    if (self.current_tag) {
      $query_top.tag    = self.current_tag;
      $query_bottom.tag = self.current_tag;
    }

    var navbar_args = {
      title_html: self.partial('@blogs.entry.blocks.title', { user: user, entry: self.entry }),
      level_up: self.link_to('blogs.sole', { user_hid: user.hid }),
      toolbar: 'blogs.entry.blocks.toolbar_controls',
      search_areas: [
        {
          title: self.t('search_entries'),
          method: 'search.blog_entries'
        }
      ]
    };

  != self.partial('@common.blocks.navbar.levelup_apps', navbar_args)
  != self.partial('@common.blocks.navbar.alt_levelup_title_toolbar', navbar_args)

  nav.breadcrumbs-container
    .layout__container.container-fluid
      != self.partial('@common.blocks.breadcrumbs')

  .layout__container.container-fluid
    != self.partial('@users.blocks.announces')

    .blog-entry.blog-entry-page__entry(id='entry' + self.entry.hid)
      header.page-head.blog-entry__head
        .float-right
          != self.partial('@blogs.entry.blocks.toolbar_controls')

        h1.blog-entry__title.page-head__title(itemprop='name')= self.entry.title

        .blog-entry__meta
          span.blog-entry__meta-item.blog-entry__author
            if user.hid
              a.blog-entry__author-link._ucard-popover(
                href=self.link_to('users.member', { user_hid: user.hid })
                data-user-id=self.entry.user
                data-user-ref='blog_entry:'+user.hid+':'+self.entry.hid
              )
                img.blog-entry__avatar(alt=user.name)&attributes(self.avatar(user, 'sm'))
                = user.name
            else
              .blog-entry__avatar.av-anon

          span.blog-entry__meta-item.blog-entry__ts!= self.timetag(self.entry.ts, 'relative')

      .blog-entry__content
        .blog-entry__message.markup!= self.entry.html

        - var tail = self.partial('@blogs.entry.attachments', { post: self.entry, user: user });
        if tail
          .blog-entry__tail.markup-tail
            !=tail

      footer.blog-entry__controls
        ul.blog-entry__controls-blk
          if self.settings.can_report_abuse
            li.blog-entry__control-item
              button.btn.btn-sm.blog-entry__action.blog-entry__report(title=self.t('report')
                data-entry-id=self.entry._id
                data-on-click='blogs.blocks.blog_entry:report'
              )
                span.icon.icon-report

          li.blog-entry__control-item.blog-entry__vote-up
            button.btn.btn-sm.blog-entry__action(
              title=self.t('vote_up')
            )
              span.icon.icon-vote-up

          li.blog-entry__control-item.blog-entry__vote-down
            button.btn.btn-sm.blog-entry__action(
              title=self.t('vote_down')
            )
              span.icon.icon-vote-down

          if self.runtime.is_member
            li.blog-entry__control-item
              button.btn.btn-sm.blog-entry__action.blog-entry__bookmark-add(
                data-entry-id=self.entry._id
                data-on-click='blogs.blocks.blog_entry:bookmark'
                title=self.t('bookmark_add')
              )
                span.icon.icon-bookmark
                span.blog-entry__bookmarks-count(data-bm-count=self.entry.bookmarks)

              button.btn.btn-sm.blog-entry__action.blog-entry__bookmark-remove(
                data-entry-id=self.entry._id
                data-on-click='blogs.blocks.blog_entry:bookmark'
                data-remove='true'
                title=self.t('bookmark_remove')
              )
                span.icon.icon-bookmark
                span.blog-entry__bookmarks-count(data-bm-count=self.entry.bookmarks)

          li.blog-entry__control-item
            span.icon.icon-views.icon-space-after= self.entry.views

      != self.partial('@blogs.blocks.tag_list', { tag_hids: self.entry.tag_hids })

    if self.comments && self.comments.length
      #comments.blogs-entry__comments
        .blogs-entry__comment-header
          = self.t('comments', self.comments.length)

        +render_comments(self.comments)

    if self.settings.blogs_can_create
      .blogs-entry__reply
        button.btn.btn-block.btn-link.icon.icon-plus.icon-space-after(
          data-on-click='blogs.entry:reply'
        )=self.t('add_comment')
