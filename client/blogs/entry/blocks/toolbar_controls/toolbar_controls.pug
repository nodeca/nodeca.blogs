- var entryStatuses = '$$ JSON.stringify(N.models.blogs.BlogEntry.statuses) $$'
- var subscriptionTypes = '$$ JSON.stringify(N.models.users.Subscription.types) $$'
- var menu_rnd_id = 'rnd' + self.get_label_uid()

- var items = []

if self.runtime.is_member
  - items.push('subscription')

if self.entry.user === self.runtime.user_id
  if self.entry.st !== entryStatuses.DELETED && self.entry.st !== entryStatuses.DELETED_HARD
    - items.push('delete')

if items.length > 0
  - items.push('divider')

- items.push('header')

if self.settings.blogs_mod_can_add_infractions
  - items.push('mod_add_infraction')

if self.settings.can_see_ip
  - items.push('mod_ip_info')

if self.settings.blogs_mod_can_delete
  if self.entry.st === entryStatuses.DELETED || self.entry.st === entryStatuses.DELETED_HARD
    - items.push('mod_undelete')
  else
    - items.push('mod_delete')

//- If last item is header - remove it
if items.length > 0 && items[items.length - 1] === 'header'
  - items.pop()

//- If last item is divider - remove it
if items.length > 0 && items[items.length - 1] === 'divider'
  - items.pop()


.page-actions.blogs-entry__toolbar-controls
  - var subscriptionIcon = 'icon-track-normal'
  - var subscriptionTitle = self.t('subs_normal')

  if (self.subscription === subscriptionTypes.MUTED)
    - subscriptionIcon = 'icon-track-muted'
    - subscriptionTitle = self.t('subs_muted')
  else if (self.subscription === subscriptionTypes.TRACKING)
    - subscriptionIcon = 'icon-track-tracking'
    - subscriptionTitle = self.t('subs_tracking')
  else if (self.subscription === subscriptionTypes.WATCHING)
    - subscriptionIcon = 'icon-track-watching'
    - subscriptionTitle = self.t('subs_watching')

  if (self.subscription && self.subscription !== subscriptionTypes.NORMAL)
    button.btn.btn-secondary.btn-square.d-none.d-sm-inline-block.icon(
      type='button'
      title=subscriptionTitle
      class=subscriptionIcon
      data-on-click='blogs.entry:subscription'
      data-entry-id=self.entry._id
      data-entry-subscription=self.subscription
    )

  if items.length > 0
    .page-actions__dropdown
      button.btn.btn-secondary.btn-square.icon.icon-dropdown.dropdown-toggle(
        type='button'
        id=menu_rnd_id
        aria-haspopup='true'
        aria-expanded='false'
        data-bs-toggle='dropdown'
      )

      .dropdown-menu.dropdown-menu-end(aria-labelledby=menu_rnd_id)

        each item in items
          case item

            when 'divider'
              .dropdown-divider

            when 'header'
              .dropdown-header= self.t('mod_actions')

            when 'subscription'
              button.dropdown-item(
                type='button'
                data-on-click='blogs.entry:subscription'
                data-entry-id=self.entry._id
                data-entry-subscription=self.subscription
              )
                if self.subscription && self.subscription !== subscriptionTypes.NORMAL
                  span.icon.icon-space-after(class=subscriptionIcon)
                = self.t('subscription')

            when 'delete'
              button.dropdown-item(
                type='button'
                data-on-click='blogs.entry:delete'
                data-entry-hid=self.entry.hid
              )= self.t('delete')

            when 'mod_add_infraction'
              button.dropdown-item(
                type='button'
                data-on-click='blogs.entry:entry_add_infraction'
                data-entry-hid=self.entry.hid
              )= self.t('add_infraction')

            when 'mod_ip_info'
              button.dropdown-item(
                type='button'
                data-on-click='blogs.blocks.blog_entry:show_ip'
                data-entry-id=self.entry._id
              )= self.t('ip_info')

            when 'mod_delete'
              button.dropdown-item(
                type='button'
                data-on-click='blogs.entry:delete'
                data-entry-hid=self.entry.hid
                data-as-moderator='true'
              )= self.t('delete')

            when 'mod_undelete'
              button.dropdown-item(
                type='button'
                data-on-click='blogs.entry:undelete'
                data-entry-hid=self.entry.hid
              )= self.t('undelete')
