- var prev_mark;

each item in self.items
  - var entry = self.blog_entries[item.id];
  - var blog_owner = self.users[entry.user];
  - var mark = self.read_marks[entry._id];
  - var href = self.link_to('blogs.entry', { user_hid: blog_owner.hid, entry_hid: entry.hid });

  if (prev_mark && !prev_mark.isNew && mark.isNew)
    .user-tracker__separator= self.t('new_entries')
  - prev_mark = mark;

  .user-tracker-item.user-tracker-item__m-blog-entry(
    class=mark.isNew ? 'user-tracker-item__m-new' : ''
    class=mark.next !== -1 ? 'user-tracker-item__m-unread' : ''
    data-last-ts=new Date(item.last_ts).valueOf()
  )
    .user-tracker-item__content
      h2.user-tracker-item__title
        a.user-tracker-item__title-link(href=href)= entry.title

        .user-tracker-item__new-marker= self.t('new')

      .user-tracker-item__microstat
        if blog_owner
          a.user-tracker-item__microstat-category(href=self.link_to('blogs.sole', { user_hid: blog_owner.hid }))=blog_owner.name
        a.user-tracker-item__microstat-time(
          href=href
        )
          != self.timetag(entry.cache.last_ts || entry.ts, 'relative')

      //- cover all space with link for small screens
      a.user-tracker-item__overlay.d-md-none(href=href)

    .user-tracker-item__stat-time
      a.user-tracker-item__stat-link(
        href=href
      )!= self.timetag(entry.cache.last_ts || entry.ts, 'relative')
